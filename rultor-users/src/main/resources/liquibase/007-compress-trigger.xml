<?xml version="1.0"?>
<!--
 * Copyright (c) 2009-2013, rultor.com
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met: 1) Redistributions of source code must retain the above
 * copyright notice, this list of conditions and the following
 * disclaimer. 2) Redistributions in binary form must reproduce the above
 * copyright notice, this list of conditions and the following
 * disclaimer in the documentation and/or other materials provided
 * with the distribution. 3) Neither the name of the rultor.com nor
 * the names of its contributors may be used to endorse or promote
 * products derived from this software without specific prior written
 * permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT
 * NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
 * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
 * THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 -->
<databaseChangeLog
    xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
    http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
    <changeSet author="yegor@tpc2.com" id="153">
        <sql><![CDATA[
            CREATE FUNCTION compress() RETURNS TRIGGER AS $$
            BEGIN
                CREATE TEMPORARY TABLE t AS
                    SELECT ct, ctrule, dt, dtrule, SUM(amount) AS amt, COUNT(id) AS cnt
                    FROM receipt
                    WHERE time < NOW() - INTERVAL '1 week' AND @ amount > 10000
                    GROUP BY ct, ctrule, dt, dtrule;
                INSERT INTO receipt (ct, ctrule, dt, dtrule, amount, details)
                    SELECT t.ct, t.ctrule, t.dt, t.dtrule, t.amt, format('%s transaction(s)', t.cnt)
                    FROM t;
                DELETE FROM receipt
                    WHERE time < NOW() - INTERVAL '1 week';
                RETURN NULL;
            END;
            $$ LANGUAGE plpgsql
        ]]></sql>
        <sql><![CDATA[
            CREATE TRIGGER compress_on_update
            AFTER UPDATE ON receipt
            FOR EACH STATEMENT
            EXECUTE PROCEDURE compress();
        ]]></sql>
    </changeSet>
</databaseChangeLog>
