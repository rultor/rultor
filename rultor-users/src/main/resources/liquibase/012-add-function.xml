<?xml version="1.0"?>
<!--
 * Copyright (c) 2009-2013, rultor.com
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met: 1) Redistributions of source code must retain the above
 * copyright notice, this list of conditions and the following
 * disclaimer. 2) Redistributions in binary form must reproduce the above
 * copyright notice, this list of conditions and the following
 * disclaimer in the documentation and/or other materials provided
 * with the distribution. 3) Neither the name of the rultor.com nor
 * the names of its contributors may be used to endorse or promote
 * products derived from this software without specific prior written
 * permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT
 * NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
 * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
 * THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 -->
<databaseChangeLog
    xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">
    <changeSet author="yegor@tpc2.com" id="336.1" context="live">
        <comment>New function ADD()</comment>
        <sql splitStatements="false"><![CDATA[
            CREATE FUNCTION add(wowner VARCHAR(120), wrule VARCHAR(250), wscheduled VARCHAR(20),
                ct VARCHAR(120), ctrule VARCHAR(250),
                dt VARCHAR(120), dtrule VARCHAR(250),
                amount BIGINT, details TEXT) RETURNS VOID AS $$
            DECLARE
                urn_regex VARCHAR(30) = 'urn:[a-z]+:[0-9]+';
            BEGIN
                IF ct = dt THEN
                    RAISE EXCEPTION 'CT and DT names cannot be identical';
                END IF;
                IF amount = 0 THEN
                    RAISE EXCEPTION 'amount cannot be zero';
                END IF;
                IF details = '' THEN
                    RAISE EXCEPTION 'details cannot be empty';
                END IF;
                IF ct NOT SIMILAR TO urn_regex THEN
                    RAISE EXCEPTION 'CT is not a valid URN: %', ct;
                END IF;
                IF dt NOT SIMILAR TO urn_regex THEN
                    RAISE EXCEPTION 'DT is not a valid URN: %', dt;
                END IF;
                IF wowner != '' AND wowner NOT SIMILAR TO urn_regex THEN
                    RAISE EXCEPTION 'WOWNER is not a valid URN: %', wowner;
                END IF;
                LOCK TABLE receipt IN SHARE ROW EXCLUSIVE MODE;
                INSERT INTO receipt (time, wowner, wrule, wscheduled, ct, ctrule, dt, dtrule, details, amount)
                    VALUES (NOW(), wowner, wrule, wscheduled, ct, ctrule, dt, dtrule, details, amount);
                RETURN;
            END;
            $$ LANGUAGE plpgsql
        ]]></sql>
        <sql splitStatements="false"><![CDATA[
            CREATE FUNCTION add(ct VARCHAR(120), dt VARCHAR(120),
                amount BIGINT, details TEXT) RETURNS VOID AS $$
            BEGIN
                PERFORM add('', '', '', ct, '', dt, '', amount, details);
                RETURN;
            END;
            $$ LANGUAGE plpgsql
        ]]></sql>
        <rollback>
            <sql splitStatements="false"><![CDATA[
                DROP FUNCTION add(wowner VARCHAR(120), wrule VARCHAR(250), wscheduled VARCHAR(20),
                    ct VARCHAR(120), ctrule VARCHAR(250),
                    dt VARCHAR(120), dtrule VARCHAR(250),
                    amount BIGINT, details TEXT);
            ]]></sql>
            <sql splitStatements="false"><![CDATA[
                DROP FUNCTION add(ct VARCHAR(120), dt VARCHAR(120),
                    amount BIGINT, details TEXT);
            ]]></sql>
        </rollback>
    </changeSet>
    <changeSet author="yegor@tpc2.com" id="336.test" context="test">
        <comment>Test for function add()</comment>
        <sql splitStatements="false"><![CDATA[
            DO language plpgsql $$
            BEGIN
                TRUNCATE receipt CASCADE;
                PERFORM add('urn:test:1', 'urn:test:2', 123, '#336 test');
                PERFORM * FROM receipt WHERE dtbalance = 123 AND dt = 'urn:test:2';
                IF NOT FOUND THEN
                    RAISE EXCEPTION 'Row was not inserted';
                END IF;
            END
            $$;
        ]]></sql>
    </changeSet>
</databaseChangeLog>
