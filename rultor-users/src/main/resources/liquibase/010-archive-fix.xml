<?xml version="1.0"?>
<!--
 * Copyright (c) 2009-2013, rultor.com
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met: 1) Redistributions of source code must retain the above
 * copyright notice, this list of conditions and the following
 * disclaimer. 2) Redistributions in binary form must reproduce the above
 * copyright notice, this list of conditions and the following
 * disclaimer in the documentation and/or other materials provided
 * with the distribution. 3) Neither the name of the rultor.com nor
 * the names of its contributors may be used to endorse or promote
 * products derived from this software without specific prior written
 * permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT
 * NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
 * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
 * THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 -->
<databaseChangeLog
    xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">
    <changeSet author="yegor@tpc2.com" id="311" context="live">
        <comment>Fix for archive() function</comment>
        <sql splitStatements="false"><![CDATA[
            CREATE OR REPLACE FUNCTION archive() RETURNS VOID AS $$
            DECLARE
                threshold TIMESTAMP;
            BEGIN
                threshold := DATE_TRUNC('week', now() - '1 WEEK'::INTERVAL);
                INSERT INTO receipt (time, ct, ctrule, dt, dtrule, amount, details)
                    SELECT threshold, ct, ctrule, dt, dtrule, SUM(amount), FORMAT('%s transactions aggregated', COUNT(id))
                        FROM receipt
                        WHERE time < threshold AND @ amount < 10000
                        GROUP BY ct, ctrule, dt, dtrule;
                DELETE FROM receipt
                    WHERE time < threshold AND @ amount < 10000;
            END;
            $$ LANGUAGE plpgsql
        ]]></sql>
    </changeSet>
    <changeSet author="yegor@tpc2.com" id="311.test" context="test">
        <comment>Test for archive() function</comment>
        <sql splitStatements="false"><![CDATA[
            DO language plpgsql $$
            DECLARE
                found INTEGER;
            BEGIN
                TRUNCATE receipt CASCADE;
                INSERT INTO receipt (time, ct, ctrule, dt, dtrule, amount, details)
                    VALUES (TIMESTAMP '2010-05-16T15:36:38Z', 'urn:test:1', 'alpha', 'urn:test:2', 'foo', 10, 'test line 1');
                INSERT INTO receipt (time, ct, ctrule, dt, dtrule, amount, details)
                    VALUES (TIMESTAMP '2010-05-16T15:36:38Z', 'urn:test:1', 'alpha', 'urn:test:2', 'foo', 10, 'test line 2');
                INSERT INTO receipt (time, ct, ctrule, dt, dtrule, amount, details)
                    VALUES (NOW() + '1 DAY'::INTERVAL, 'urn:test:1', 'beta', 'urn:test:2', 'foo', 55000, 'big amount, should stay');
                INSERT INTO receipt (time, ct, ctrule, dt, dtrule, amount, details)
                    VALUES (TIMESTAMP '2010-05-16T15:36:38Z', 'urn:test:1', 'alpha', 'urn:test:2', 'foo', -33000, 'transaction in future');
                PERFORM archive();
                SELECT COUNT(*) INTO found FROM receipt;
                IF found != 3 THEN
                    RAISE EXCEPTION 'Exactly three records expected, % found', found;
                END IF;
                SELECT SUM(amount) INTO found FROM receipt;
                IF found != 22020 THEN
                    RAISE EXCEPTION 'Total balance expected is 55020, % found', found;
                END IF;
            END
            $$;
        ]]></sql>
    </changeSet>
</databaseChangeLog>
